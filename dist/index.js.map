{"version":3,"sources":["../src/index.js"],"names":["require","cors","app","all","req","res","next","header","method","sendStatus","use","json","createServer","get","send","hello","set","process","env","PORT","server","listen","console","log"],"mappings":";;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AARAA,QAAQ,qBAAR;AACAA,QAAQ,gBAAR;;AAQA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,IAAME,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAClCD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,wCAA3C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,cAA3C;AACA,QAAI,aAAaH,IAAII,MAArB,EAA6B;AACzBH,YAAII,UAAJ,CAAe,GAAf;AACH,KAFD,MAEO;AACHH;AACH;AACJ,CATD;;AAWAJ,IAAIQ,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACA,eAAKC,YAAL,CAAkBV,GAAlB;;AAGAA,IAAIW,GAAJ,CAAQ,GAAR,EAAY,UAACT,GAAD,EAAKC,GAAL,EAAa;AACrBA,QAAIS,IAAJ,CAAS,OAAT;AACH,CAFD;;AAIAZ,IAAIQ,GAAJ,CAAQ,aAAR;AACAR,IAAIQ,GAAJ,CAAQ,YAAR;AACAR,IAAIQ,GAAJ,CAAQ,aAAR;AACAR,IAAIQ,GAAJ,CAAQ,YAAR;AACAR,IAAIQ,GAAJ,CAAQ,YAAR,EAAsB,UAACN,GAAD,EAAKC,GAAL,EAAW;AAC7BA,QAAIM,IAAJ,CAAS,EAACI,OAAM,OAAP,EAAT;AACH,CAFD;;AAIAb,IAAIc,GAAJ,CAAQ,MAAR,EAAiBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAArC;;AAEA,IAAMC,SAASlB,IAAImB,MAAJ,CAAWnB,IAAIW,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAW;AAClDS,YAAQC,GAAR,CAAY,6BAAZ,EAA2CrB,IAAIW,GAAJ,CAAQ,MAAR,CAA3C;AACH,CAFc,CAAf","file":"index.js","sourcesContent":["require('babel-core/register');\nrequire('babel-polyfill');\nimport http from 'http';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport signUp from './routes/signUp';\nimport login from './routes/login';\nimport boards from './routes/boards';\nimport tasks from './routes/tasks';\nvar cors = require('cors');\n\nconst app = express();\n\napp.all('*', function(req, res, next) {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n    res.header('Access-Control-Allow-Headers', 'Content-Type');\n    if ('OPTIONS' == req.method) {\n        res.sendStatus(200);\n    } else {\n        next();\n    }\n});\n\napp.use(bodyParser.json());\nhttp.createServer(app);\n\n\napp.get('/',(req,res) => {\n    res.send(\"Hello\")\n});\n\napp.use('/api/signup', signUp);\napp.use('/api/login', login);\napp.use('/api/boards', boards);\napp.use('/api/tasks', tasks);\napp.use('/api/hello', (req,res)=>{\n    res.json({hello:'Hello'})\n});\n\napp.set('port', (process.env.PORT || 8080));\n\nconst server = app.listen(app.get('port'), function() {\n    console.log('Node app is running on port', app.get('port'));\n});"]}