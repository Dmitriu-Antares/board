{"version":3,"sources":["../../src/routes/login.js"],"names":["router","Router","post","req","res","body","username","password","query","where","orWhere","email","fetch","then","user","compare","attributes","err","resp","cert","token","sign","id","get","json","status","errors","form"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,IAAP,CAAY,GAAZ,EAAiB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAAA,oBACKD,IAAIE,IADT;AAAA,QAClBC,QADkB,aAClBA,QADkB;AAAA,QACRC,QADQ,aACRA,QADQ;;AAE1B,WAAO,aAAMC,KAAN,CAAY;AACfC,eAAO,EAAEH,UAASA,QAAX,EADQ;AAEfI,iBAAS,EAAEC,OAAML,QAAR;AAFM,KAAZ,EAGJM,KAHI,GAGIC,IAHJ,CAGS,gBAAQ;AACpB,YAAGC,IAAH,EAAQ;AACJ,6BAAOC,OAAP,CAAeR,QAAf,EAAwBO,KAAKE,UAAL,CAAgBT,QAAxC,EAAkD,UAASU,GAAT,EAAcC,IAAd,EAAoB;AAClE,oBAAGA,IAAH,EAAQ;AACJ,wBAAMC,OAAO,YAAb;AACA,wBAAMC,QAAQ,uBAAIC,IAAJ,CAAS;AACnBf,kCAAUA,QADS;AAEnBgB,4BAAIR,KAAKS,GAAL,CAAS,IAAT;AAFe,qBAAT,EAGXJ,IAHW,CAAd;AAIAf,wBAAIoB,IAAJ,CAAS,EAACJ,YAAD,EAAT;AACH,iBAPD,MAOO;AACHhB,wBAAIqB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,EAAEE,QAAQ,EAACC,MAAK,sBAAN,EAAV,EAArB;AACH;AACJ,aAXD;AAYH,SAbD,MAaO;AACHvB,gBAAIqB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,EAACE,QAAQ,EAACC,MAAK,sBAAN,EAAT,EAArB;AACH;AACJ,KApBM,CAAP;AAqBH,CAvBD;;kBAyBe3B,M","file":"login.js","sourcesContent":["import { Users } from '../models/Users';\nimport express from 'express';\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\nconst router = express.Router();\n\nrouter.post('/', (req,res) => {\n    const { username, password } = req.body;\n    return Users.query({\n        where: { username:username },\n        orWhere: { email:username }\n    }).fetch().then(user => {\n        if(user){\n            bcrypt.compare(password,user.attributes.password, function(err, resp) {\n                if(resp){\n                    const cert = 'helloWorld';\n                    const token = jwt.sign({\n                        username: username,\n                        id: user.get('id')\n                    }, cert);\n                    res.json({token});\n                } else {\n                    res.status(401).json({ errors: {form:'invalid creditionals'} });\n                }\n            });\n        } else {\n            res.status(401).json({errors: {form:'invalid creditionals'}});\n        }\n    })\n});\n\nexport default router;"]}